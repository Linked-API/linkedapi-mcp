name: PR Merged -> main

on:
  push:
    branches: ['main']

permissions:
  contents: read
  packages: write

jobs:
  linting:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.1

      - name: Set up Node.js
        uses: actions/setup-node@v4.0.1
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

  build-push:
    needs: [linting]
    runs-on: ubuntu-latest
    if: always() && needs.linting.result == 'success'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.1

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set lowercase repository owner
        id: lowercase
        run: echo "repository_owner_lowercase=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ steps.lowercase.outputs.repository_owner_lowercase }}/${{ secrets.DOCKER_IMAGE_NAME }}:prod
          cache-from: type=registry,ref=ghcr.io/${{ steps.lowercase.outputs.repository_owner_lowercase }}/${{ secrets.DOCKER_IMAGE_NAME }}:prod
          cache-to: type=inline

  deployment:
    needs: [build-push]
    runs-on: ubuntu-latest
    if: always() && needs.build-push.result == 'success'

    steps:
      - name: Trigger PaaS deployment
        run: |
          curl -X 'POST' \
            '${{ secrets.PAAS_API_URL }}/application.deploy' \
            -H 'accept: application/json' \
            -H 'Content-Type: application/json' \
            -H 'x-api-key: ${{ secrets.PAAS_API_TOKEN }}' \
            -d '{
            "applicationId": "${{ secrets.PAAS_APPLICATION_ID }}"
          }'
